package main

// Code generated by github.com/andrewarrow/avdl_to_golang. DO NOT EDIT.

import "strings"

type fields struct {
	stringFields []string
	floatFields  []string
	longFields   []string
}

func newFields(m map[string]string) fields {
	f := fields{}
	if m["strings"] != "" {
		for _, s := range strings.Split(m["strings"], ",") {
			f.stringFields = append(f.stringFields, s)
		}
	}
	if m["floats"] != "" {
		for _, s := range strings.Split(m["floats"], ",") {
			f.floatFields = append(f.floatFields, s)
		}
	}
	if m["longs"] != "" {
		for _, s := range strings.Split(m["longs"], ",") {
			f.longFields = append(f.longFields, s)
		}
	}
	return f
}

var schema map[string]fields = map[string]fields{"OtherThing": newFields(map[string]string{"strings": "flavor,other_name", "floats": "latitude,longitude", "longs": "time_now,time_then"}),
	"Thing": newFields(map[string]string{"strings": "flavor", "floats": "version", "longs": "ip"}),
}
